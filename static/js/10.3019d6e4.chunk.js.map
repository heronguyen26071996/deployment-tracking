{"version":3,"sources":["components/Products.js"],"names":["Login","Form","useForm","form","Option","Select","useState","date","setdate","dataSource","setdataSource","EditableContext","React","createContext","handleSave","row","newData","index","findIndex","item","key","splice","console","log","tailLayout","wrapperCol","offset","span","showNotifi","type","title","description","notification","message","components","body","props","component","Provider","value","cell","editable","children","dataIndex","record","restProps","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","e","a","validateFields","values","childNode","Item","style","margin","name","rules","required","defaultValue","min","max","formatter","parser","replace","ref","onPressEnter","onBlur","className","paddingRight","onClick","columns_","width","map","col","onCell","labelCol","label","format","disabledDate","moment","endOf","onChange","dateString","mode","placeholder","push","persent","length","val","age","addDataa","optionLabelProp","dataProject","pro","rowClassName","bordered","scroll","y","columns","marginLeft","marginTop","htmlType","chil","strPro","LocalData","localStorage","getItem","percent","localUser","JSON","parse","i","dataParse","email","reporter","projectHistory","reportername","proArray","setItem","stringify","resetFields"],"mappings":"ghCA4ZeA,UA3YH,WAAa,IAAD,EACPC,IAAKC,UAAbC,EADe,oBAEdC,EAAWC,IAAXD,OAFc,EAIEE,mBAAS,IAJX,mBAIfC,EAJe,KAITC,EAJS,OAKcF,mBAAS,IALvB,mBAKfG,EALe,KAKHC,EALG,OAMFJ,oBAAS,GANP,mBAsBhBK,GAtBgB,UAsBEC,IAAMC,iBA0FxBC,EAAa,SAAAC,GACjB,IAAMC,EAAO,YAAOP,GACdQ,EAAQD,EAAQE,WAAU,SAAAC,GAAI,OAAIJ,EAAIK,MAAQD,EAAKC,OACnDD,EAAOH,EAAQC,GACrBD,EAAQK,OAAOJ,EAAO,EAAtB,eAA8BE,EAA9B,GAAuCJ,IACvCO,QAAQC,IAAIP,GAEZN,EAAcM,IAUhB,IAAMQ,EAAa,CACjBC,WAAY,CAAEC,OAAQ,EAAGC,KAAM,KAOjC,IAAMC,EAAa,SAACC,EAAMC,EAAOC,GAC/BC,IAAaH,GAAM,CACjBI,QAASH,EACTC,YAAaA,KA6CjB,IAyEMG,EAAa,CACjBC,KAAM,CACJpB,IA5OgB,SAAC,GAAwB,EAAtBE,MAAuB,IAAbmB,EAAY,2BAC5BnC,IAAKC,UAAbC,EADoC,oBAE3C,OACE,kBAAC,IAAD,CAAMA,KAAMA,EAAMkC,WAAW,GAC3B,kBAAC1B,EAAgB2B,SAAjB,CAA0BC,MAAOpC,GAC/B,uBAAQiC,MAwOZI,KAlOiB,SAAC,GAQf,IAPLV,EAOI,EAPJA,MACAW,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACA9B,EAEI,EAFJA,WACG+B,EACC,mFAC0BvC,oBAAS,GADnC,mBACGwC,EADH,KACYC,EADZ,KAEEC,EAAWC,mBACX9C,EAAO+C,qBAAWvC,GACxBwC,qBAAU,WACJL,GACFE,EAASI,QAAQC,UAElB,CAACP,IAEJ,IAAMQ,EAAa,WACjBP,GAAYD,GACZ3C,EAAKoD,eAAL,eACGZ,EAAYC,EAAOD,MAIlBa,EAAI,uCAAG,WAAMC,GAAN,eAAAC,EAAA,+EAEYvD,EAAKwD,iBAFjB,OAEHC,EAFG,OAGTN,IACAxC,EAAW,eAAK8B,EAAN,GAAiBgB,IAJlB,gDAMTtC,QAAQC,IAAI,eAAZ,MANS,yDAAH,sDAUNsC,EAAYnB,EAwChB,OAtCID,IACFoB,EAAYf,EACV,kBAAC,IAAKgB,KAAN,CACEC,MAAO,CACLC,OAAQ,GAEVC,KAAMtB,EACNuB,MAAO,CACL,CACEC,UAAU,EACVlC,QAAQ,GAAD,OAAKH,EAAL,oBAIX,kBAAC,IAAD,CACEsC,aAAc,IACdC,IAAK,EACLC,IAAK,IACLC,UAAW,SAAAhC,GAAK,gBAAOA,EAAP,MAChBiC,OAAQ,SAAAjC,GAAK,OAAIA,EAAMkC,QAAQ,IAAK,KACpCC,IAAK1B,EACL2B,aAAcnB,EACdoB,OAAQpB,KAIZ,yBACEqB,UAAU,2BACVd,MAAO,CACLe,aAAc,IAEhBC,QAASzB,GAERZ,IAKA,uBAAQG,EAAYgB,MA0JvBmB,EAjQU,CACd,CACElD,MAAO,uBACPa,UAAW,OAEXF,UAAU,GAEZ,CACEX,MAAO,2BACPmD,MAAO,MACPtC,UAAW,MACXF,UAAU,IAsPWyC,KAAI,SAAAC,GAC3B,OAAKA,EAAI1C,SAIF,eACF0C,EADL,CAEEC,OAAQ,SAAAxC,GAAM,MAAK,CACjBA,SACAH,SAAU0C,EAAI1C,SACdE,UAAWwC,EAAIxC,UACfb,MAAOqD,EAAIrD,MACXhB,WAAYA,MAVPqE,KAcX,OACE,yBAAKN,UAAU,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKlD,KAAM,IACT,yBAAKkD,UAAU,SACb,uEACA,kBAAC,IAAD,iBApKK,CACbQ,SAAU,CAAE1D,KAAM,GAClBF,WAAY,CAAEE,KAAM,KAkKZ,CAAkBxB,KAAMA,IACtB,kBAAC,IAAK2D,KAAN,eAAWG,KAAK,QAAWzC,EAA3B,CAAuC8D,MAAM,WAhJ1C,CACbpB,MAAO,CAAC,CAAErC,KAAM,SAAUsC,UAAU,EAAMlC,QAAS,0BAgJvC,kBAAC,IAAD,CACEsD,OA9RG,aA+RHC,aA7JhB,SAAuBpC,GACrB,OAAOA,GAAWA,EAAUqC,MAASC,MAAM,QA6J7B3B,MAAO,CAAEkB,MAAO,QAChBU,SAtKhB,SAAuBpF,EAAMqF,GAC3BpF,EAAQoF,OAuKe,IACb,kBAAC,IAAK9B,KAAN,iBAAetC,EAAf,CAA2B8D,MAAM,gBAAQrB,KAAK,WAC5C,kBAAC,IAAD,CACE4B,KAAK,WACL9B,MAAO,CAAEkB,MAAO,QAChBa,YAAY,qBAEZH,SAzHhB,SAAuBpD,GAjCrB7B,EAAc,IAEC,SAAA6B,GACf,IAAMwD,EAAO,GACTC,EAAU,IAAMzD,EAAM0D,QAAQ,EAElC,GADA3E,QAAQC,IAAIyE,GACS,IAAjBzD,EAAM0D,OAAc,CAAC,IAAD,uBACtB,YAAkB1D,EAAlB,+CAAyB,CAAC,IAAf2D,EAAc,QAEvBH,EAAKA,KAAK,CACR3E,IAAK8E,EACLjC,KAAMiC,EACNC,IAAK,MAEPzF,EAAcqF,IARM,uFAUjB,CAAC,IAAD,uBACL,YAAkBxD,EAAlB,+CAAyB,CAAC,IAAf2D,EAAc,QACvBH,EAAKA,KAAK,CACR3E,IAAK8E,EACLjC,KAAMiC,EACNC,IAAKH,KALJ,kFAQFD,EAAKb,KAAI,SAAC/D,EAAKF,GACXA,IAAQ8E,EAAKE,OAAO,IAErB9E,EAAKgF,IAAK,IAAIH,EAAQzD,EAAM0D,OAAQ9E,EAAKgF,QAG/CzF,EAAcqF,IAKhBK,CAAS7D,IAwHK8D,gBAAgB,SAEfC,EAAYpB,KAAI,SAAAqB,GAAG,OAClB,kBAACnG,EAAD,CAAQgB,IAAKmF,EAAItC,MACf,yBAAKY,UAAU,0BAA0B0B,EAAItC,YAKrD,kBAAC,IAAD,CACE/B,WAAYA,EACZsE,aAAc,iBAAM,gBACpBC,UAAQ,EACRC,OAAQ,CAAEC,EAAG,KACblG,WAAYA,EACZmG,QAAS5B,EACTjB,MAAO,CAAEkB,MAAO,UAElB,kBAAC,IAAKnB,KAAStC,EACb,kBAAC,IAAD,CACEuC,MAAO,CAAE8C,WAAY,MAAOC,UAAW,GAAI7B,MAAO,KAClDJ,UAAU,QACVhD,KAAK,UACLkF,SAAS,SACThC,QA7IA,WAOd,IANA,IAAIgB,EAAO,GACPiB,EAAO,GACPC,EAAS,GACTC,EAAYC,aAAaC,QAAQ,QACjCC,EAAU,EACVC,EAAYC,KAAKC,MAAML,aAAaC,QAAQ,UACvCK,EAAI,EAAGA,EAAIhH,EAAWwF,OAAQwB,IACrCR,GAAUxG,EAAWgH,GAAGxD,KAAO,MAAQxD,EAAWgH,GAAGtB,IAAM,MAC3DkB,GAAW5G,EAAWgH,GAAGtB,IACzBa,EAAKjB,KAAKtF,EAAWgH,GAAGxD,MAG1B,GAAa,KAAT1D,EAGJ,GAA0B,IAAtBE,EAAWwF,OAIf,GAAIoB,EAAU,IACZzF,EAAW,QAAS,+EAA0C,SAGhE,GAAIyF,EAAU,IACZzF,EAAW,QAAS,2FAAyC,SAI/D,GAAiB,MAAbsF,EAAmB,CAErB,IADA,IAAIQ,EAAYH,KAAKC,MAAML,aAAaC,QAAQ,SACvCK,EAAI,EAAGA,EAAIC,EAAUzB,OAAQwB,IACpC1B,EAAKA,KAAK2B,EAAUD,IAEtB,IAAK,IAAIA,EAAI,EAAGA,EAAI1B,EAAKE,OAAQwB,IAC/B,GAAIlH,IAASwF,EAAK0B,GAAGlH,MAAQ+G,EAAU,GAAGK,QAAU5B,EAAK0B,GAAGG,SAG1D,OAFAtG,QAAQC,IAAI,cACZK,EAAW,QAAS,iDAAsB,IAI9CmE,EAAKA,KAAK,CACR3E,IAAK2E,EAAKE,OAAS,EACnB1F,KAAMA,EACNsH,eAAgBZ,EAChBW,SAAUN,EAAU,GAAGK,MACvBG,aAAcR,EAAU,GAAGrD,KAC3BxD,WAAYA,EACZsH,SAAUf,IAEZG,aAAaa,QAAQ,OAAQT,KAAKU,UAAUlC,IAC5CnE,EAAW,UAAW,oCAAuB,IAC7CpB,EAAQ,IACRL,EAAK+H,cACLxH,EAAc,SAEdqF,EAAKA,KAAK,CACR3E,IAAK,EACLb,KAAMA,EACNsH,eAAgBZ,EAChBW,SAAUN,EAAU,GAAGK,MACvBG,aAAcR,EAAU,GAAGrD,KAC3BxD,WAAYA,EACZsH,SAAUf,IAEZpF,EAAW,UAAW,oCAAuB,IAC7CpB,EAAQ,IACRL,EAAK+H,cACLf,aAAaa,QAAQ,OAAQT,KAAKU,UAAUlC,IAC5CrF,EAAc,SApDdkB,EAAW,QAAS,2DAA+B,MAuHzC,8BAaR,kBAAC,IAAD,CAAKD,KAAM,IACT,yBAAKkD,UAAU","file":"static/js/10.3019d6e4.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport {\r\n  Form,\r\n  Select,\r\n  DatePicker,\r\n  Button,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Table\r\n} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport '../index.css'\r\nimport dataProject from '../data/projectname'\r\nimport moment, { localeData } from 'moment'\r\n\r\nvar Login = function () {\r\n  const [form] = Form.useForm()\r\n  const { Option } = Select\r\n  const dateFormat = 'DD/MM/YYYY'\r\n  const [date, setdate] = useState('')\r\n  const [dataSource, setdataSource] = useState([])\r\n  const [is, setis] = useState(false)\r\n  const columns = [\r\n    {\r\n      title: 'Tên dự án',\r\n      dataIndex: 'name',\r\n\r\n      editable: false\r\n    },\r\n    {\r\n      title: 'Tiến đô (%)',\r\n      width: '30%',\r\n      dataIndex: 'age',\r\n      editable: true\r\n    }\r\n  ]\r\n\r\n  const EditableContext = React.createContext()\r\n\r\n  const EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm()\r\n    return (\r\n      <Form form={form} component={false}>\r\n        <EditableContext.Provider value={form}>\r\n          <tr {...props} />\r\n        </EditableContext.Provider>\r\n      </Form>\r\n    )\r\n  }\r\n\r\n  const EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n  }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const inputRef = useRef()\r\n    const form = useContext(EditableContext)\r\n    useEffect(() => {\r\n      if (editing) {\r\n        inputRef.current.focus()\r\n      }\r\n    }, [editing])\r\n\r\n    const toggleEdit = () => {\r\n      setEditing(!editing)\r\n      form.setFieldsValue({\r\n        [dataIndex]: record[dataIndex]\r\n      })\r\n    }\r\n\r\n    const save = async e => {\r\n      try {\r\n        const values = await form.validateFields()\r\n        toggleEdit()\r\n        handleSave({ ...record, ...values })\r\n      } catch (errInfo) {\r\n        console.log('Save failed:', errInfo)\r\n      }\r\n    }\r\n\r\n    let childNode = children\r\n\r\n    if (editable) {\r\n      childNode = editing ? (\r\n        <Form.Item\r\n          style={{\r\n            margin: 0\r\n          }}\r\n          name={dataIndex}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`\r\n            }\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            defaultValue={100}\r\n            min={1}\r\n            max={100}\r\n            formatter={value => `${value}%`}\r\n            parser={value => value.replace('%', '')}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        </Form.Item>\r\n      ) : (\r\n        <div\r\n          className='editable-cell-value-wrap'\r\n          style={{\r\n            paddingRight: 24\r\n          }}\r\n          onClick={toggleEdit}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>\r\n  }\r\n  const handleSave = row => {\r\n    const newData = [...dataSource]\r\n    const index = newData.findIndex(item => row.key === item.key)\r\n    const item = newData[index]\r\n    newData.splice(index, 1, { ...item, ...row })\r\n    console.log(newData)\r\n\r\n    setdataSource(newData)\r\n  }\r\n\r\n  const layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 }\r\n  }\r\n  function onChangeDate (date, dateString) {\r\n    setdate(dateString)\r\n  }\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 4, span: 20 }\r\n  }\r\n\r\n  function disabledDate (current) {\r\n    return current && current > moment().endOf('day')\r\n  }\r\n\r\n  const showNotifi = (type, title, description) => {\r\n    notification[type]({\r\n      message: title,\r\n      description: description\r\n    })\r\n  }\r\n  const config = {\r\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }]\r\n  }\r\n  const clearData = () => {\r\n    setdataSource([])\r\n  }\r\n  const addDataa = value => {\r\n    const push = []\r\n    let persent = 100 / value.length>>0\r\n    console.log(persent)\r\n    if (value.length === 1) {\r\n      for (const val of value) {\r\n    \r\n        push.push({\r\n          key: val,\r\n          name: val,\r\n          age: 100\r\n        })\r\n        setdataSource(push)\r\n      }\r\n    } else {\r\n      for (const val of value) {\r\n        push.push({\r\n          key: val,\r\n          name: val,\r\n          age: persent\r\n        })\r\n      }\r\n         push.map((item,index )=> {\r\n          if(index===push.length-1)\r\n          {\r\n            item.age=(100-persent*value.length)+item.age\r\n          }\r\n        })\r\n      setdataSource(push)\r\n    }\r\n  }\r\n  function handleChange (value) {\r\n    clearData()\r\n    addDataa(value)\r\n  }\r\n\r\n  const onClick = () => {\r\n    let push = []\r\n    var chil = []\r\n    var strPro = ''\r\n    let LocalData = localStorage.getItem('data')\r\n    let percent = 0\r\n    let localUser = JSON.parse(localStorage.getItem('email'))\r\n    for (let i = 0; i < dataSource.length; i++) {\r\n      strPro += dataSource[i].name + ' - ' + dataSource[i].age + '%' + ', '\r\n      percent += dataSource[i].age\r\n      chil.push(dataSource[i].name)\r\n    }\r\n\r\n    if (date === '') {\r\n      return\r\n    }\r\n    if (dataSource.length === 0) {\r\n      showNotifi('error', 'Chưa chọn dự án cần báo cáo', '')\r\n      return\r\n    }\r\n    if (percent < 100) {\r\n      showNotifi('error', 'Tổng tiến độ trong ngày phải đạt 100% ', '')\r\n      return\r\n    }\r\n    if (percent > 100) {\r\n      showNotifi('error', 'Tổng tiến độ không được vượt quá 100%', '')\r\n      return\r\n    }\r\n\r\n    if (LocalData != null) {\r\n      let dataParse = JSON.parse(localStorage.getItem('data'))\r\n      for (let i = 0; i < dataParse.length; i++) {\r\n        push.push(dataParse[i])\r\n      }\r\n      for (let i = 0; i < push.length; i++) {\r\n        if (date === push[i].date && localUser[0].email === push[i].reporter) {\r\n          console.log('trung')\r\n          showNotifi('error', 'Dữ liệu đã tồn tại', '')\r\n          return\r\n        }\r\n      }\r\n      push.push({\r\n        key: push.length + 1,\r\n        date: date,\r\n        projectHistory: strPro,\r\n        reporter: localUser[0].email,\r\n        reportername: localUser[0].name,\r\n        dataSource: dataSource,\r\n        proArray: chil\r\n      })\r\n      localStorage.setItem('data', JSON.stringify(push))\r\n      showNotifi('success', 'Thêm mới thành công', '')\r\n      setdate('')\r\n      form.resetFields()\r\n      setdataSource([])\r\n    } else {\r\n      push.push({\r\n        key: 1,\r\n        date: date,\r\n        projectHistory: strPro,\r\n        reporter: localUser[0].email,\r\n        reportername: localUser[0].name,\r\n        dataSource: dataSource,\r\n        proArray: chil\r\n      })\r\n      showNotifi('success', 'Thêm mới thành công', '')\r\n      setdate('')\r\n      form.resetFields()\r\n      localStorage.setItem('data', JSON.stringify(push))\r\n      setdataSource([])\r\n    }\r\n  }\r\n\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell\r\n    }\r\n  }\r\n  const columns_ = columns.map(col => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: record => ({\r\n        record,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        handleSave: handleSave\r\n      })\r\n    }\r\n  })\r\n  return (\r\n    <div className='dv'>\r\n      <Row>\r\n        <Col span={12}>\r\n          <div className='dvFrm'>\r\n            <h2>Thêm báo cáo công việc</h2>\r\n            <Form {...layout} form={form}>\r\n              <Form.Item name='date' {...tailLayout} label='Ngày' {...config}>\r\n                <DatePicker\r\n                  format={dateFormat}\r\n                  disabledDate={disabledDate}\r\n                  style={{ width: '100%' }}\r\n                  onChange={onChangeDate}\r\n                />\r\n              </Form.Item>{' '}\r\n              <Form.Item {...tailLayout} label='Dự án' name='select'>\r\n                <Select\r\n                  mode='multiple'\r\n                  style={{ width: '100%' }}\r\n                  placeholder='select one project'\r\n                  //   defaultValue={[\"china\"]}\r\n                  onChange={handleChange}\r\n                  optionLabelProp='label'\r\n                >\r\n                  {dataProject.map(pro => (\r\n                    <Option key={pro.name}>\r\n                      <div className='demo-option-label-item'>{pro.name}</div>\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <Table\r\n                components={components}\r\n                rowClassName={() => 'editable-row'}\r\n                bordered\r\n                scroll={{ y: 450 }}\r\n                dataSource={dataSource}\r\n                columns={columns_}\r\n                style={{ width: '100%' }}\r\n              />\r\n              <Form.Item {...tailLayout}>\r\n                <Button\r\n                  style={{ marginLeft: '40%', marginTop: 20, width: 220 }}\r\n                  className='input'\r\n                  type='primary'\r\n                  htmlType='submit'\r\n                  onClick={onClick}\r\n                >\r\n                  Tạo báo cáo\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          <div className='dvBg'></div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n    // <div style={{ marginTop: '2%' }}>\r\n    //   <Row>\r\n    //     <Col span={10} style={{ marginLeft: '5%' }}>\r\n    //       {' '}\r\n    //       <Form {...layout} form={form}>\r\n    //         <Form.Item name='date' {...tailLayout} label='Ngày' {...config}>\r\n    //           <DatePicker\r\n    //             format={dateFormat}\r\n    //             disabledDate={disabledDate}\r\n    //             style={{ width: '100%' }}\r\n    //             onChange={onChangeDate}\r\n    //           />\r\n    //         </Form.Item>{' '}\r\n    //         <Form.Item {...tailLayout} label='Dự án' name='select'>\r\n    //           <Select\r\n    //             mode='multiple'\r\n    //             style={{ width: '100%' }}\r\n    //             placeholder='select one project'\r\n    //             //   defaultValue={[\"china\"]}\r\n    //             onChange={handleChange}\r\n    //             optionLabelProp='label'\r\n    //           >\r\n    //             {dataProject.map(pro => (\r\n    //               <Option key={pro.name}>\r\n    //                 <div className='demo-option-label-item'>{pro.name}</div>\r\n    //               </Option>\r\n    //             ))}\r\n    //           </Select>\r\n    //         </Form.Item>\r\n    //         <Table\r\n    //           components={components}\r\n    //           rowClassName={() => 'editable-row'}\r\n    //           bordered\r\n    //           scroll={{ y: 450 }}\r\n    //           dataSource={dataSource}\r\n    //           columns={columns_}\r\n    //           style={{ width: '100%' }}\r\n    //         />\r\n    //         <Form.Item {...tailLayout}>\r\n    //           <Button\r\n    //             style={{ marginLeft: '40%', marginTop: 20, width: 220 }}\r\n    //             className='input'\r\n    //             type='primary'\r\n    //             htmlType='submit'\r\n    //             onClick={onClick}\r\n    //           >\r\n    //             Tạo báo cáo\r\n    //           </Button>\r\n    //         </Form.Item>\r\n    //       </Form>\r\n    //     </Col>{' '}\r\n    //     <Col span={13}>  <div className='dvBg'></div></Col>\r\n    //   </Row>\r\n    // </div>\r\n  )\r\n}\r\nexport default Login\r\n"],"sourceRoot":""}