{"version":3,"sources":["components/Login.js"],"names":["axios","require","Login","history","useHistory","useState","email","setemail","password","setpassword","loading","setloading","showNotifi","type","title","description","notification","message","className","tip","spinning","span","name","initialValues","remember","onFinish","values","console","log","Item","rules","required","size","prefix","placeholder","style","widows","onChange","e","target","value","Password","htmlType","onClick","uRL","get","then","response","data","statusCode","push","pathname","user","localStorage","setItem","JSON","stringify","catch","error"],"mappings":"gTAOMA,G,OAAQC,EAAQ,MAoJPC,UAnJH,WACV,IAAIC,EAAUC,cADQ,EAEIC,mBAAS,IAFb,mBAEfC,EAFe,KAERC,EAFQ,OAGUF,mBAAS,IAHnB,mBAGfG,EAHe,KAGLC,EAHK,OAIKJ,oBAAS,GAJd,mBAIfK,EAJe,KAIPC,EAJO,KAiBhBC,EAAa,SAACC,EAAMC,EAAOC,GAC/BC,IAAaH,GAAM,CACjBI,QAASH,EACTC,YAAaA,KAuDjB,OACE,yBAAKG,UAAU,MACX,kBAAC,IAAD,CAAMC,IAAI,aAAcC,SAAUV,GACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKW,KAAM,IAET,yBAAKH,UAAU,cACb,kBAAC,IAAD,CACEI,KAAK,eACLJ,UAAU,aACVK,cAAe,CAAEC,UAAU,GAC3BC,SAhFK,SAAAC,GACfC,QAAQC,IAAI,WAAYF,KAiFd,kBAAC,IAAKG,KAAN,KACE,yBAAKX,UAAU,YAAf,8BAEF,kBAAC,IAAKW,KAAN,CACEP,KAAK,WACLQ,MAAO,CACL,CAAEC,UAAU,EAAMd,QAAS,iDAC3B,CAAEJ,KAAM,QAASI,QAAS,yDAE7BC,UAAU,SAET,kBAAC,IAAD,CACCc,KAAK,QACJC,OAAQ,kBAAC,IAAD,CAAcf,UAAU,wBAChCgB,YAAY,QACZC,MAAO,CAACC,OAAO,KACfC,SAAU,SAAAC,GACR/B,EAAS+B,EAAEC,OAAOC,WAIxB,kBAAC,IAAKX,KAAN,CACEP,KAAK,WACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,8CAEnC,kBAAC,IAAMwB,SAAP,CACCT,KAAK,QACJC,OAAQ,kBAAC,IAAD,CAAcf,UAAU,wBAChCL,KAAK,WACLqB,YAAY,WACZG,SAAU,SAAAC,GACR7B,EAAY6B,EAAEC,OAAOC,WArC7B,IAwCe,kBAAC,IAAKX,KAAN,KACX,kBAAC,IAAD,CACEhB,KAAK,UACL6B,SAAS,SACTxB,UAAU,oBACVyB,QAxGA,WACdhC,GAAW,GACX,IAAIiC,EAAG,yCAAqCtC,EAArC,YAA8CE,GACrDR,EACG6C,IAAID,GACJE,MAAK,SAAUC,GACd,GAAgC,KAA5BA,EAASC,KAAKC,WAAmB,CACnCtC,GAAW,GACXC,EAAW,UAAW,4CAAwB,IAC9CT,EAAQ+C,KAAK,CAAEC,SAAU,UACrB,IAAIC,EAAK,GACfA,EAAKF,KAAK,CAAC5C,MAAMA,EAAME,SAASA,IAChC6C,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAC7CC,aAAaC,QAAQ,QAAQ,QAE3B1C,EAAW,QAAS,uEAAsC,IAC1DD,GAAW,MAId8C,OAAM,SAAUC,GACf9C,EAAW,QAAS,kBAAc,uDAClCD,GAAW,QA8EH,cAgBR,kBAAC,IAAD,CAAKU,KAAM,IACT,yBAAKH,UAAU","file":"static/js/9.2fe3245a.chunk.js","sourcesContent":["import React, {  useState } from 'react'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { Form, Input, Button, Row, Col, notification,Spin,Alert } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport '../index.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport datauser from '../data/user'\r\nconst axios = require('axios');\r\nvar Login = function () {\r\n  let history = useHistory()\r\n  const [email, setemail] = useState('')\r\n  const [password, setpassword] = useState('')\r\n  const [loading,setloading]=useState(false);\r\n\r\n  const onFinish = values => {\r\n    console.log('Success:', values)\r\n  }\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n  let back = e => {\r\n    e.stopPropagation()\r\n    history.goBack()\r\n  }\r\n  const showNotifi = (type, title, description) => {\r\n    notification[type]({\r\n      message: title,\r\n      description: description\r\n    })\r\n  }\r\n  const onLogin = () => {\r\n    setloading(true)\r\n    let uRL = `http://localhost:3002/api/user/${email}/${password}`\r\n    axios\r\n      .get(uRL)\r\n      .then(function (response) {\r\n        if (response.data.statusCode == 200) {\r\n          setloading(false)\r\n          showNotifi('success', 'Đăng nhập thành công', '');\r\n          history.push({ pathname: '/home' });\r\n              let user=[]\r\n        user.push({email:email,password:password});\r\n        localStorage.setItem('email', JSON.stringify(user))\r\n        localStorage.setItem('show', true)\r\n        } else {\r\n          showNotifi('error', 'Tài khoản hoặc mật khẩu không đúng', '');\r\n          setloading(false)\r\n        }\r\n        // console.log(response.data.statusCode);\r\n      })\r\n      .catch(function (error) {\r\n        showNotifi('error', 'Lỗi server', 'Không thể kết nối tới server')\r\n        setloading(false)\r\n      })\r\n    // const isLogin = false\r\n    // localStorage.removeItem('email')\r\n    // localStorage.removeItem('password')\r\n\r\n    // var filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/\r\n    // if (!filter.test(email)) {\r\n    //   return false\r\n    // }\r\n    // datauser.map(data => {\r\n    //   if (data.email === email && data.password === password) {\r\n    //     let user=[]\r\n    //     user.push({email:email,password:password,name:data.name,permission:data.permission});\r\n    //     history.push({ pathname: '/home' })\r\n    //     localStorage.setItem('email', JSON.stringify(user))\r\n    //     localStorage.setItem('show', true)\r\n    //     return true;\r\n    //   }\r\n    // })\r\n    // if (localStorage.getItem('email') === null) {\r\n    //   showNotifi(\r\n    //     'error',\r\n    //     'Đăng nhập thất bại',\r\n    //     'Email hoặc password không đúng'\r\n    //   )\r\n    // } else {\r\n    //   showNotifi('success', 'Đăng nhập thành công', '')\r\n    // }\r\n  }\r\n  return (\r\n    <div className='dv'>\r\n        <Spin tip=\"Loading...\"  spinning={loading}>\r\n      <Row>\r\n        <Col span={12}  >\r\n\r\n          <div className='dvFrmLogin'>\r\n            <Form\r\n              name='normal_login'\r\n              className='login-form'\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item>\r\n                <div className='frmTitle'> Đăng nhập</div>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='username'\r\n                rules={[\r\n                  { required: true, message: 'Email không được trống' },\r\n                  { type: 'email', message: 'Email không đúng định dạng' }\r\n                ]}\r\n               className=\"input\"\r\n              >\r\n                <Input\r\n                 size=\"large\" \r\n                  prefix={<UserOutlined className='site-form-item-icon' />}\r\n                  placeholder='Email'\r\n                  style={{widows:220}}\r\n                  onChange={e => {\r\n                    setemail(e.target.value)\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='password'\r\n                rules={[{ required: true, message: 'Vui lòng nhập mật khẩu' }]}\r\n              >\r\n                <Input.Password\r\n                 size=\"large\" \r\n                  prefix={<LockOutlined className='site-form-item-icon' />}\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  onChange={e => {\r\n                    setpassword(e.target.value)\r\n                  }}\r\n                />\r\n              </Form.Item> <Form.Item>\r\n                <Button\r\n                  type='primary'\r\n                  htmlType='submit'\r\n                  className='login-form-button'\r\n                  onClick={onLogin}\r\n                >\r\n                  Log in\r\n                </Button>\r\n            \r\n              </Form.Item>\r\n        \r\n\r\n           \r\n            </Form>\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          <div className='dvBg'></div>\r\n        </Col>\r\n      </Row>\r\n      </Spin>\r\n    </div>\r\n  )\r\n}\r\nexport default Login\r\n"],"sourceRoot":""}