{"version":3,"sources":["components/Contact.js"],"names":["Login","Form","useForm","form","Option","Select","id","useParams","dataParse","JSON","parse","localStorage","getItem","useState","date","setdate","filter","item","key","dataSource","setdataSource","map","EditableContext","React","createContext","handleSave","row","newData","index","findIndex","splice","console","log","tailLayout","wrapperCol","offset","span","showNotifi","type","title","description","notification","message","components","body","props","component","Provider","value","cell","editable","children","dataIndex","record","restProps","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","e","a","validateFields","values","childNode","Item","style","margin","name","rules","required","defaultValue","min","max","formatter","parser","replace","ref","onPressEnter","onBlur","className","paddingRight","onClick","columns_","width","col","onCell","labelCol","label","disabled","format","disabledDate","moment","endOf","onChange","dateString","mode","placeholder","proArray","push","val","age","i","length","addDataa","optionLabelProp","dataProject","pro","rowClassName","bordered","scroll","y","columns","marginLeft","marginTop","htmlType","strPro","chil","percent","projectHistory","setItem","stringify"],"mappings":"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","file":"static/js/8.1ae9dc9d.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  DatePicker,\r\n  Button,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Table,\r\n} from \"antd\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport dataProject from \"../data/projectname\";\r\nimport moment, { localeData } from \"moment\";\r\n\r\nvar Login = function () {\r\n  const [form] = Form.useForm();\r\n  const { Option } = Select;\r\n  const dateFormat = \"DD/MM/YYYY\";\r\n  let { id } = useParams();\r\n  let dataParse = JSON.parse(localStorage.getItem(\"data\"));\r\n  const [date, setdate] = useState([]);\r\n  const [defaultval, setdefaultval] = useState([]);\r\n  const [dataSource, setdataSource] = useState(\r\n    dataParse.filter((item) => item.key == id)[0].dataSource\r\n  );\r\n  const [is, setis] = useState(false);\r\n  const columns = [\r\n    {\r\n      title: \"Tên dự án\",\r\n      dataIndex: \"name\",\r\n\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"Tiến độ trong ngày (%)\",\r\n      width: \"20%\",\r\n      dataIndex: \"age\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  dataParse.map((item) => {\r\n    if (item.key == 1) {\r\n      return item;\r\n    }\r\n  });\r\n  const EditableContext = React.createContext();\r\n\r\n  const EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n      <Form form={form} component={false}>\r\n        <EditableContext.Provider value={form}>\r\n          <tr {...props} />\r\n        </EditableContext.Provider>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  const EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n  }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef();\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n      if (editing) {\r\n        inputRef.current.focus();\r\n      }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n      setEditing(!editing);\r\n      form.setFieldsValue({\r\n        [dataIndex]: record[dataIndex],\r\n      });\r\n    };\r\n\r\n    const save = async (e) => {\r\n      try {\r\n        const values = await form.validateFields();\r\n        toggleEdit();\r\n        handleSave({ ...record, ...values });\r\n      } catch (errInfo) {\r\n        console.log(\"Save failed:\", errInfo);\r\n      }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n      childNode = editing ? (\r\n        <Form.Item\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          name={dataIndex}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            defaultValue={100}\r\n            min={1}\r\n            max={100}\r\n            formatter={(value) => `${value}%`}\r\n            parser={(value) => value.replace(\"%\", \"\")}\r\n            ref={inputRef}\r\n            onPressEnter={save}\r\n            onBlur={save}\r\n          />\r\n        </Form.Item>\r\n      ) : (\r\n        <div\r\n          className=\"editable-cell-value-wrap\"\r\n          style={{\r\n            paddingRight: 24,\r\n          }}\r\n          onClick={toggleEdit}\r\n        >\r\n          {children}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n  };\r\n  const handleSave = (row) => {\r\n    const newData = [...dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    console.log(newData);\r\n\r\n    setdataSource(newData);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n  };\r\n  function onChangeDate(date, dateString) {\r\n    setdate(dateString);\r\n  }\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 4, span: 20 },\r\n  };\r\n\r\n  function disabledDate(current) {\r\n    return current && current > moment().endOf(\"day\");\r\n  }\r\n\r\n  const showNotifi = (type, title, description) => {\r\n    notification[type]({\r\n      message: title,\r\n      description: description,\r\n    });\r\n  };\r\n  const config = {\r\n    rules: [{ type: \"object\", required: true, message: \"Please select time!\" }],\r\n  };\r\n  const clearData = () => {\r\n    setdataSource([]);\r\n  };\r\n  const addDataa = (value) => {\r\n    const push = [];\r\n    for (const val of value) {\r\n      push.push({\r\n        key: val,\r\n        name: val,\r\n        age: 1,\r\n      });\r\n      push.map((item) => {\r\n        for (let i = 0; i < dataSource.length; i++) {\r\n          console.log();\r\n          if (item.name == dataSource[i].name) {\r\n            console.log(\"chay\");\r\n            item.age = dataSource[i].age;\r\n          }\r\n        }\r\n      });\r\n      setdataSource(push);\r\n    }\r\n  };\r\n  function handleChange(value) {\r\n    clearData();\r\n    addDataa(value);\r\n  }\r\n\r\n  const onClick = () => {\r\n    let push = [];\r\n    var strPro = \"\";\r\n    var chil = [];\r\n    let LocalData = localStorage.getItem(\"data\");\r\n    let percent = 0;\r\n    let localUser = JSON.parse(localStorage.getItem(\"email\"));\r\n    for (let i = 0; i < dataSource.length; i++) {\r\n      strPro += dataSource[i].name + \" - \" + dataSource[i].age + \"%\" + \", \";\r\n      percent += dataSource[i].age;\r\n      chil.push(dataSource[i].name);\r\n    }\r\n\r\n    if (date === \"\") {\r\n      return;\r\n    }\r\n    if (dataSource.length === 0) {\r\n      showNotifi(\"error\", \"Chưa chọn dự án cần báo cáo\", \"\");\r\n      return;\r\n    }\r\n    if (percent < 100) {\r\n      showNotifi(\"error\", \"Tổng tiến độ trong ngày phải đạt 100% \", \"\");\r\n      return;\r\n    }\r\n    if (percent > 100) {\r\n      showNotifi(\"error\", \"Tổng tiến độ không được vượt quá 100%\", \"\");\r\n      return;\r\n    }\r\n\r\n    let dataParse = JSON.parse(localStorage.getItem(\"data\"));\r\n    for (let i = 0; i < dataParse.length; i++) {\r\n      push.push(dataParse[i]);\r\n    }\r\n    push.map((item) => {\r\n      if (item.key == id) {\r\n        item.projectHistory = strPro;\r\n        item.dataSource = dataSource;\r\n        item.proArray = chil;\r\n      }\r\n    });\r\n    showNotifi(\"success\", \"Cập nhật thành công\", \"\");\r\n    localStorage.setItem(\"data\", JSON.stringify(push));\r\n  };\r\n\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n  const columns_ = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        handleSave: handleSave,\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <div className=\"dv\">\r\n      <Row>\r\n        <Col span={12}>\r\n        \r\n          <div className=\"dvFrm\">\r\n          <h2>Chỉnh sửa thông tin báo cáo</h2>\r\n            <Form {...layout} form={form}>\r\n            \r\n              <Form.Item name=\"date\" {...tailLayout} label=\"Ngày\">\r\n                <DatePicker\r\n                  disabled\r\n                  format={dateFormat}\r\n                  disabledDate={disabledDate}\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={onChangeDate}\r\n                  defaultValue={moment(\r\n                    dataParse.filter((item) => item.key == id)[0].date,\r\n                    dateFormat\r\n                  )}\r\n                  //   defaultValue={dataParse.filter(item=>item.key==id)[0].date}\r\n                />\r\n              </Form.Item>{\" \"}\r\n              <Form.Item {...tailLayout} label=\"Dự án\" name=\"select\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"select one project\"\r\n                  defaultValue={\r\n                    dataParse.filter((item) => item.key == id)[0].proArray\r\n                  }\r\n                  onChange={handleChange}\r\n                  optionLabelProp=\"label\"\r\n                >\r\n                  {dataProject.map((pro) => (\r\n                    <Option key={pro.name}>\r\n                      <div className=\"demo-option-label-item\">{pro.name}</div>\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <Table\r\n                components={components}\r\n                rowClassName={() => \"editable-row\"}\r\n                bordered\r\n                scroll={{ y: 450 }}\r\n                dataSource={dataSource}\r\n                columns={columns_}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n              <Form.Item {...tailLayout}>\r\n                <Button\r\n                  style={{ marginLeft: \"40%\", marginTop: 20, width: 220 }}\r\n                  className=\"input\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  onClick={onClick}\r\n                >\r\n                  Cập nhật báo cáo\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          <div className=\"dvBg\"></div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n    // <div style={{ marginTop: '2%' }}>\r\n    //   <Row>\r\n    //     <Col span={10} style={{ marginLeft: '5%' }}>\r\n    //       {' '}\r\n    //       <Form {...layout} form={form}>\r\n    //         <Form.Item\r\n    //           {...tailLayout}\r\n    //           label='Chỉnh sửa báo cáo'\r\n    //           style={{ fontWeight: 'bold', fontSize: 24 }}\r\n    //         ></Form.Item>\r\n    //         <Form.Item name='date' {...tailLayout} label='Ngày'>\r\n    //           <DatePicker disabled\r\n    //             format={dateFormat}\r\n    //             disabledDate={disabledDate}\r\n    //             style={{ width: '100%' }}\r\n    //             onChange={onChangeDate}\r\n    //             defaultValue={moment(\r\n    //               dataParse.filter(item => item.key == id)[0].date,\r\n    //               dateFormat\r\n    //             )}\r\n    //             //   defaultValue={dataParse.filter(item=>item.key==id)[0].date}\r\n    //           />\r\n    //         </Form.Item>{' '}\r\n    //         <Form.Item {...tailLayout} label='Dự án' name='select'>\r\n    //           <Select\r\n    //             mode='multiple'\r\n    //             style={{ width: '100%' }}\r\n    //             placeholder='select one project'\r\n    //             defaultValue={\r\n    //               dataParse.filter(item => item.key == id)[0].proArray\r\n    //             }\r\n    //             onChange={handleChange}\r\n    //             optionLabelProp='label'\r\n    //           >\r\n    //             {dataProject.map(pro => (\r\n    //               <Option key={pro.name}>\r\n    //                 <div className='demo-option-label-item'>{pro.name}</div>\r\n    //               </Option>\r\n    //             ))}\r\n    //           </Select>\r\n    //         </Form.Item>\r\n    //         <Table\r\n    //           components={components}\r\n    //           rowClassName={() => 'editable-row'}\r\n    //           bordered\r\n    //           scroll={{ y: 450 }}\r\n    //           dataSource={dataSource}\r\n    //           columns={columns_}\r\n    //           style={{ width: '100%' }}\r\n    //         />\r\n    //         <Form.Item {...tailLayout}>\r\n    //           <Button\r\n    //             style={{ marginLeft: '40%', marginTop: 20, width: 220 }}\r\n    //             className='input'\r\n    //             type='primary'\r\n    //             htmlType='submit'\r\n    //             onClick={onClick}\r\n    //           >\r\n    //             Cập nhật báo cáo\r\n    //           </Button>\r\n    //         </Form.Item>\r\n    //       </Form>\r\n    //     </Col>{' '}\r\n    //     <Col span={8}>222222222222</Col>\r\n    //   </Row>\r\n    // </div>\r\n  );\r\n};\r\nexport default Login;\r\n"],"sourceRoot":""}